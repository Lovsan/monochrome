const { SettingsConverters, SettingsValidators } = require('./../../monochrome.js');

module.exports = [
  {
    userFacingName: 'Answer time limit',
    description: 'This setting controls how many seconds players have to answer a quiz question before I say time\'s up and move on to the next question.',
    allowedValuesDescription: 'A number between 5 and 120 (in seconds)',
    uniqueId: 'server_only',
    userSetting: false,
    channelSetting: false,
    defaultUserFacingValue: '16',
    convertUserFacingValueToInternalValue: SettingsConverters.stringToFloat,
    convertInternalValueToUserFacingValue: SettingsConverters.toString,
    validateInternalValue: SettingsValidators.createRangeValidator(5, 120),
  },
  {
    userFacingName: 'Score limit',
    description: 'This setting controls how many points the quiz game stops at. When a player scores this many points, the game stops and they win.',
    allowedValuesDescription: 'A whole number between 1 and 10000',
    uniqueId: 'channel_only',
    userSetting: false,
    serverSetting: false,
    defaultUserFacingValue: '10',
    convertUserFacingValueToInternalValue: SettingsConverters.stringToInt,
    convertInternalValueToUserFacingValue: SettingsConverters.toString,
    validateInternalValue: SettingsValidators.createRangeValidator(1, 10000),
  },
  {
    userFacingName: 'Unanswered question limit',
    description: 'This setting controls how many questions in a row are allowed to go unanswered before the game stops. The intended purpose for this is to automatically end games that players abandon.',
    allowedValuesDescription: 'A whole number between 1 and 25',
    uniqueId: 'user_only',
    serverSetting: false,
    channelSetting: false,
    defaultUserFacingValue: '5',
    convertUserFacingValueToInternalValue: SettingsConverters.stringToInt,
    convertInternalValueToUserFacingValue: SettingsConverters.toString,
    validateInternalValue: SettingsValidators.createRangeValidator(1, 25),
  },
];
